{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"Y3wWpzb8CSAz"},"outputs":[],"source":["import pandas as pd\n","import re\n","import numpy as np\n","from ast import literal_eval"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YpQsaIpnNKHd","executionInfo":{"status":"ok","timestamp":1686044245988,"user_tz":-420,"elapsed":76769,"user":{"displayName":"Raden Fausta Anugrah Dianparama","userId":"17257992174951473980"}},"outputId":"fbf1e990-e7f3-4985-b4d2-3a4448b51abf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["def remove_substring_in_parentheses(string):\n","    pattern = r'\\([^)]*\\)'\n","    return re.sub(pattern, '', string)"],"metadata":{"id":"635LLwaSD1Cg"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nttcHGUECSA1"},"outputs":[],"source":["def parse_specific(df, POS_list):\n","    kata_asal_list = []\n","    pos_list = []\n","    kata_tujuan_list = []\n","    makna_list = []\n","    contoh_kalimat_list = []\n","    contoh_kalimat_font_size_list = []\n","    main_entry_list = []\n","    is_anomali_list = []\n","\n","    for i, row in df.iterrows():\n","        if row['is_anomali'] == 1 or row['is_padanan_lema'] == 1:\n","            kata_asal_list.append(str(row['definisi_lema']))\n","            pos_list.append('')\n","            kata_tujuan_list.append([])\n","            makna_list.append([])\n","            contoh_kalimat_list.append(row['contoh_kalimat'])\n","            contoh_kalimat_font_size_list.append(row['contoh_kalimat_font_size_pos'])\n","            main_entry_list.append(row['main_entry'])\n","            is_anomali_list.append(row['is_anomali'])\n","            continue\n","        for POS in POS_list:\n","            split_list = str(row['definisi_lema']).split(' ' + POS + ' ')\n","            if len(split_list) == 2:\n","                kata_asal_list.append(split_list[0])\n","                pos_list.append(POS)\n","\n","                tujuan = remove_substring_in_parentheses(str(split_list[1])).split(',')[-1].split(';')\n","\n","                m_list = []\n","                kt_list = []\n","\n","                for elemen in tujuan:\n","                    if len(elemen) == 0:\n","                        continue;\n","                    if len(elemen.split()) > 2 and not (str(elemen) in str(row['contoh_kalimat'])):\n","                        m_list.append(elemen)\n","                    else:\n","                        kt_list.append(elemen)\n","\n","                kata_tujuan_list.append(kt_list)\n","                makna_list.append(m_list)\n","                contoh_kalimat_list.append(row['contoh_kalimat'])\n","                contoh_kalimat_font_size_list.append(row['contoh_kalimat_font_size_pos'])\n","                main_entry_list.append(row['main_entry'])\n","                is_anomali_list.append(row['is_anomali'])\n","                break\n","\n","    ret = pd.DataFrame()\n","    ret['kata_asal'] = kata_asal_list\n","    ret['POS'] = pos_list\n","    ret['kata_tujuan'] = kata_tujuan_list\n","    ret['makna'] = makna_list\n","    ret['contoh_kalimat'] = contoh_kalimat_list\n","    ret['contoh_kalimat_font_size_pos'] = contoh_kalimat_font_size_list\n","    ret['main_entry'] = main_entry_list\n","    ret['is_anomali'] = is_anomali_list\n","    return ret"]},{"cell_type":"code","source":["import os\n","from pathlib import Path\n","directory = \"/content/drive/MyDrive/TA Bareng Bareng/Laporan Mingguan TA Harakan Julian Fausta/Minggu 15 (Final)/Ekstraksi/\"\n","path = directory + '7. Ekstraksi Informasi Sumber Daya NLP/'\n","cnt = 0\n","for filename in os.listdir(directory + '6. Pemecahan Definisi Lema/'):\n","    if(filename[-3:] == 'csv' and filename[0].isnumeric()):\n","        nomor = filename.split('_')[0]\n","        f = os.path.join(directory + '6. Pemecahan Definisi Lema/', filename)\n","        df = pd.read_csv(f)\n","        df_specific = parse_specific(df, ['n', 'v', 'a', 'adv', 'num', 'pron', 'p'])\n","        df_specific.to_csv(path + nomor + \"_Specific.csv\", index = False)\n","        cnt += 1\n","        print('Done Kamus', nomor, '(Total', cnt, 'Kamus)')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dfcgELhGyqoD","executionInfo":{"status":"ok","timestamp":1686044334687,"user_tz":-420,"elapsed":88705,"user":{"displayName":"Raden Fausta Anugrah Dianparama","userId":"17257992174951473980"}},"outputId":"33627759-c138-4936-9749-2ff763ecb17d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Done Kamus 10 (Total 1 Kamus)\n","Done Kamus 12 (Total 2 Kamus)\n","Done Kamus 17 (Total 3 Kamus)\n","Done Kamus 18 (Total 4 Kamus)\n","Done Kamus 19 (Total 5 Kamus)\n","Done Kamus 20 (Total 6 Kamus)\n","Done Kamus 21 (Total 7 Kamus)\n","Done Kamus 23 (Total 8 Kamus)\n","Done Kamus 24 (Total 9 Kamus)\n","Done Kamus 26 (Total 10 Kamus)\n","Done Kamus 27 (Total 11 Kamus)\n","Done Kamus 28 (Total 12 Kamus)\n","Done Kamus 29 (Total 13 Kamus)\n","Done Kamus 2 (Total 14 Kamus)\n","Done Kamus 31 (Total 15 Kamus)\n","Done Kamus 32 (Total 16 Kamus)\n","Done Kamus 33 (Total 17 Kamus)\n","Done Kamus 34 (Total 18 Kamus)\n","Done Kamus 36 (Total 19 Kamus)\n","Done Kamus 38 (Total 20 Kamus)\n","Done Kamus 41 (Total 21 Kamus)\n","Done Kamus 42 (Total 22 Kamus)\n","Done Kamus 44 (Total 23 Kamus)\n","Done Kamus 46 (Total 24 Kamus)\n","Done Kamus 4 (Total 25 Kamus)\n","Done Kamus 51 (Total 26 Kamus)\n","Done Kamus 52 (Total 27 Kamus)\n","Done Kamus 54 (Total 28 Kamus)\n","Done Kamus 55 (Total 29 Kamus)\n","Done Kamus 56 (Total 30 Kamus)\n","Done Kamus 58 (Total 31 Kamus)\n","Done Kamus 5 (Total 32 Kamus)\n","Done Kamus 60 (Total 33 Kamus)\n","Done Kamus 63 (Total 34 Kamus)\n","Done Kamus 66 (Total 35 Kamus)\n","Done Kamus 68 (Total 36 Kamus)\n","Done Kamus 71 (Total 37 Kamus)\n","Done Kamus 78 (Total 38 Kamus)\n","Done Kamus 84 (Total 39 Kamus)\n","Done Kamus 85 (Total 40 Kamus)\n","Done Kamus 87 (Total 41 Kamus)\n","Done Kamus 89 (Total 42 Kamus)\n","Done Kamus 91 (Total 43 Kamus)\n"]}]}],"metadata":{"interpreter":{"hash":"31f2aee4e71d21fbe5cf8b01ff0e069b9275f58929596ceb00d14d90e3e16cd6"},"kernelspec":{"display_name":"Python 3.8.2 64-bit","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.2"},"colab":{"provenance":[{"file_id":"1mzZMEkFFek_EPB2wgvvaNMpuablL-6ak","timestamp":1694335418448}]}},"nbformat":4,"nbformat_minor":0}