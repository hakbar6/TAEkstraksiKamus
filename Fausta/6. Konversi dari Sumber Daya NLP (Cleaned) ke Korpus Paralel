{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"Y3wWpzb8CSAz"},"outputs":[],"source":["import pandas as pd\n","from sklearn.cluster import KMeans\n","import numpy as np\n","from ast import literal_eval"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YpQsaIpnNKHd","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1686135860799,"user_tz":-420,"elapsed":29400,"user":{"displayName":"Raden Fausta Anugrah Dianparama","userId":"17257992174951473980"}},"outputId":"31ce4445-9c09-48e2-ae3e-4394def8224b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive', force_remount=True)"]},{"cell_type":"code","source":["def to_entry(ls):\n","    ret = ''\n","    for isi in ls:\n","        ret += ' '\n","        ret += isi[0]\n","    return ret[1:]"],"metadata":{"id":"qqIGG-wPUbVR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def rapi(s):\n","    ret = ''\n","    for ch in str(s):\n","        if ch == '-' or ch.isalpha() or ch == ' ':\n","            ret += ch\n","    return ret.strip().lower().strip()"],"metadata":{"id":"J9uF52Wsn2fV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def getParallelCorpus(df):\n","    kalimat_asal_list = []\n","    kalimat_tujuan_list = []\n","    kalimat_belum_diproses = []\n","\n","    total = 0\n","\n","    split_with_separator = 0\n","    split_with_font = 0\n","    split_with_first = 0\n","    split_with_length = 0\n","\n","    map = {}\n","    for i, row in df.iterrows():\n","        if row['kata_asal'] not in map:\n","            map[row['kata_asal']] = []\n","        for kata in literal_eval(row['kata_tujuan']):\n","            map[row['kata_asal']].append(str(kata))\n","\n","    for i, row in df.iterrows():\n","        kalimat = str(row['contoh_kalimat'])\n","        list_kalimat = str(kalimat).split(',')\n","\n","        kalimat_lengkap = literal_eval(row['contoh_kalimat_font_size_pos'])\n","        if(len(kalimat_lengkap) == 0):\n","            continue\n","\n","        total += 1\n","\n","\n","        if(len(list_kalimat) == 2):\n","            kalimat_asal_list.append(list_kalimat[0].strip())\n","            kalimat_tujuan_list.append(list_kalimat[1].strip())\n","            split_with_separator += 1\n","            continue\n","\n","\n","        arr = []\n","        i = 0\n","        mx_it = -1\n","        mn_ni = -1\n","        for kata in kalimat_lengkap:\n","            if 'italic' in str(kata[1]).lower():\n","                mx_it = i\n","            elif mn_ni == -1:\n","                mn_ni = i\n","            i += 1\n","\n","        diff = np.diff(arr)\n","        indices = np.where(diff != 0)[0] + 1\n","\n","        if mx_it != -1 and mn_ni != -1 and mx_it < mn_ni:\n","            idx = mx_it + 1\n","            split_with_font += 1\n","            kalimat_asal_list.append(to_entry(kalimat_lengkap[:idx]).strip())\n","            kalimat_tujuan_list.append(to_entry(kalimat_lengkap[idx:]).strip())\n","            continue\n","\n","        found = 0\n","        if rapi(str(kalimat_lengkap[0][0])) in map:\n","            tujuan = map[rapi(str(kalimat_lengkap[0][0]))]\n","\n","            for idx in range(1, len(kalimat_lengkap)):\n","                if rapi(kalimat_lengkap[idx][0]) in tujuan:\n","                    kalimat_asal_list.append(to_entry(kalimat_lengkap[:idx]).strip())\n","                    kalimat_tujuan_list.append(to_entry(kalimat_lengkap[idx:]).strip())\n","                    split_with_first += 1\n","                    found = 1\n","                    break\n","\n","        if found:\n","            continue\n","        idx = len(kalimat_lengkap) // 2\n","        kalimat_asal_list.append(to_entry(kalimat_lengkap[:idx]).strip())\n","        kalimat_tujuan_list.append(to_entry(kalimat_lengkap[idx:]).strip())\n","        split_with_length += 1\n","\n","    print(str(round(100 * split_with_separator / total, 2)) + '%')\n","    print(str(round(100 * split_with_font / total, 2)) + '%')\n","    print(str(round(100 * split_with_first / total, 2)) + '%')\n","    print(str(round(100 * split_with_length / total, 2)) + '%')\n","\n","    print('Split with separator = ', split_with_separator, ' (', round(split_with_separator * 100 / total, 2), '%)', sep = '')\n","    print('Split with font = ', split_with_font, ' (', round(split_with_font * 100 / total, 2), '%)', sep = '')\n","    print('Split with first = ', split_with_first, ' (', round(split_with_first * 100 / total, 2), '%)', sep = '')\n","    print('Split with length = ', split_with_length, ' (', round(split_with_length * 100 / total, 2), '%)', sep = '')\n","    ret = pd.DataFrame()\n","    ret['kalimat_asal'] = kalimat_asal_list\n","    ret['kalimat_tujuan'] = kalimat_tujuan_list\n","    return ret"],"metadata":{"id":"GbGcrmVNI023"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ozuW0q4zDt3r","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1686135992637,"user_tz":-420,"elapsed":131840,"user":{"displayName":"Raden Fausta Anugrah Dianparama","userId":"17257992174951473980"}},"outputId":"718374ee-2cf3-4e1c-9d53-62c0bf51540c"},"outputs":[{"output_type":"stream","name":"stdout","text":["17\t1672\n","10\t2908\n","12\t4805\n","19\t6228\n","20\t1717\n","21\t2013\n","23\t2393\n","24\t3506\n","26\t661\n","27\t1741\n","28\t538\n","29\t1577\n","31\t567\n","32\t1270\n","2\t1998\n","33\t1871\n","34\t4391\n","36\t1264\n","44\t688\n","38\t1823\n","41\t4204\n","42\t4292\n","46\t8464\n","4\t2973\n","51\t831\n","52\t2106\n","55\t1825\n","56\t1622\n","58\t1527\n","5\t782\n","60\t937\n","63\t845\n","66\t1006\n","78\t310\n","84\t264\n","85\t529\n","87\t1012\n","91\t4761\n","18\t2334\n","54\t1346\n","71\t726\n","68\t2034\n","89\t934\n"]}],"source":["import os\n","from pathlib import Path\n","directory = \"/content/drive/MyDrive/TA Bareng Bareng/Laporan Mingguan TA Harakan Julian Fausta/Minggu 15 (Final)/Ekstraksi/\"\n","path = directory + '11. Parallel Corpus/'\n","cnt = 0\n","daftar_kamus = [18,68,71,54,89]\n","for filename in os.listdir(directory + '8. Cleaning Informasi Sumber Daya NLP/'):\n","    if(filename[-3:] == 'csv'):\n","        nomor = filename.split('_')[0]\n","        # if int(nomor) not in daftar_kamus:\n","            # continue\n","        f = os.path.join(directory + '8. Cleaning Informasi Sumber Daya NLP/', filename)\n","        df = pd.read_csv(f)\n","        df_clean = df\n","        df_parallel_corpus = getParallelCorpus(df_clean)\n","        df_parallel_corpus.to_csv(path + nomor + \"_Parcor.csv\", index = False)\n","        cnt += 1\n","        print('Done Kamus', nomor, '(Total', cnt, 'Kamus)')\n","        # print(nomor, len(df_parallel_corpus), sep = '\\t')\n"]}],"metadata":{"colab":{"provenance":[{"file_id":"1AIPWi2nz4y-ZzBnf1RHV1XRvStuMSgfc","timestamp":1694334863326}]},"interpreter":{"hash":"31f2aee4e71d21fbe5cf8b01ff0e069b9275f58929596ceb00d14d90e3e16cd6"},"kernelspec":{"display_name":"Python 3.8.2 64-bit","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.2"}},"nbformat":4,"nbformat_minor":0}