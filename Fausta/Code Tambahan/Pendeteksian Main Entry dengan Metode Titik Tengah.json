{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"Y3wWpzb8CSAz"},"outputs":[],"source":["import pandas as pd\n","from sklearn.cluster import KMeans\n","import numpy as np\n","from ast import literal_eval"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YpQsaIpnNKHd","executionInfo":{"status":"ok","timestamp":1684311807724,"user_tz":-420,"elapsed":4584,"user":{"displayName":"Julian Fernando","userId":"10979162290535694442"}},"outputId":"df36a7af-8b19-43b7-bcd5-2e7abb88f55b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["def findMid(ls_, outlier = False):\n","    ls = ls_.copy()\n","    ls = sorted(ls)\n","    mid = -1\n","    mx = 0\n","    length = len(ls)\n","    for i in range(1, length):\n","        jar = ls[i] - ls[i - 1]\n","        if jar > mx:\n","            mx = jar\n","            mid = (ls[i] + ls[i - 1]) / 2.0\n","    return mid"],"metadata":{"id":"SOzcCpSztt87"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def determined_main_entry(df):\n","    main_entry = []\n","\n","    x_list = []\n","    for i, row in df.iterrows():\n","        is_last = 0\n","        row_pos = list(map(float, row['posisi_entry'].strip('[]').split(',')))\n","        if i == df.index[-1]:\n","            is_last = 1\n","        else:\n","            next = df.iloc[i + 1]\n","            if row['page'] not in next['page']:\n","                is_last = 1\n","            else:\n","                next_pos = list(map(float, next['posisi_entry'].strip('[]').split(',')))\n","                if row_pos[1] + 100 < next_pos[1]:\n","                    is_last = 1\n","        x_list.append(row_pos[0])\n","        if is_last:\n","            mid = findMid(x_list)\n","            for x in x_list:\n","                if x <= mid:\n","                    main_entry.append(1)\n","                else:\n","                    main_entry.append(0)\n","            x_list = []\n","    ret = df.copy()\n","    ret['main_entry'] = main_entry\n","    return ret"],"metadata":{"id":"kX_dRuImGL0o"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import os\n","from pathlib import Path\n","directory = \"/content/drive/MyDrive/TA Bareng Bareng/Laporan Mingguan TA Harakan Julian Fausta/Minggu 14/Hasil Corpus Entry Pendekatan Font dan Posisi/\"\n","path = directory + 'WithMainEntry/'\n","isExist = os.path.exists(path)\n","if not isExist:\n","    os.makedirs(path)\n","for filename in os.listdir(directory + 'Parse/'):\n","    if(filename[-3:] == 'csv'):\n","        f = os.path.join(directory + 'Parse/', filename)\n","        nomor = filename.split('.')[0]\n","        df = pd.read_csv(f)\n","        df_with_main_entry = determined_main_entry(df)\n","        df_with_main_entry.to_csv(path + filename[:2] + \"_WithMainEntry.csv\", index = False)\n"],"metadata":{"id":"AN4utIgo9b1O"},"execution_count":null,"outputs":[]}],"metadata":{"interpreter":{"hash":"31f2aee4e71d21fbe5cf8b01ff0e069b9275f58929596ceb00d14d90e3e16cd6"},"kernelspec":{"display_name":"Python 3.8.2 64-bit","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.2"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":0}