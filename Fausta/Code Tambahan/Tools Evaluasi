{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"Y3wWpzb8CSAz"},"outputs":[],"source":["import pandas as pd\n","from sklearn.cluster import KMeans\n","import numpy as np\n","from ast import literal_eval\n","from tqdm import tqdm"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YpQsaIpnNKHd"},"outputs":[],"source":["from google.colab import drive\n","drive.mount('/content/drive', force_remount=True)"]},{"cell_type":"code","source":["kata_asal = {}\n","kata_dasar = {}\n","kata_tujuan = {}\n","makna = {}\n","tag = {}\n","kalimat_asal = {}\n","kalimat_tujuan = {}\n","list_kamus = [18, 54, 68, 71, 89]\n","for i in list_kamus:\n","    kata_asal[i] = []\n","    kata_dasar[i] = []\n","    kata_tujuan[i] = []\n","    makna[i] = []\n","    tag[i] = []\n","    kalimat_asal[i] = []\n","    kalimat_tujuan[i] = []"],"metadata":{"id":"QE04J1p9vakk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def olah(df, nomor):\n","    for i, row in df.iterrows():\n","        if pd.isna(row['kata_asal']):\n","            break\n","        kata_asal[nomor].append(row['kata_asal'])\n","        kata_dasar[nomor].append(row['kata_dasar'])\n","        kata_tujuan[nomor].append(row['kata_tujuan'])\n","        makna[nomor].append(row['makna'])\n","        tag[nomor].append(row['form'])\n","        kalimat_asal[nomor].append(row['kalimat_asal'])\n","        kalimat_tujuan[nomor].append(row['kalimat_tujuan'])"],"metadata":{"id":"qvjopunbuiS6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def rapi(s):\n","    ret = ''\n","    for ch in str(s):\n","        if ch == '-' or ch.isalpha() or ch == ' ':\n","            ret += ch\n","    return ret.strip().lower().strip()"],"metadata":{"id":"Oi7P0x_RFCXk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def parse(s):\n","    if s == '[]':\n","        return []\n","    try:\n","        return s.strip('[]').split(',')\n","    except:\n","        return []"],"metadata":{"id":"llt1TRlY7uZo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def eval(df, nomor):\n","    ke = 0\n","    main_entry = '-'\n","    kata_dasar_list = []\n","    for i, row in df.iterrows():\n","        if int(row['main_entry']) == 1:\n","            kata_dasar_list.append('-')\n","            main_entry = row['main_entry']\n","        elif int(row['kata_turunan']) == 1:\n","            kata_dasar_list.append(main_entry)\n","        else:\n","            kata_dasar_list.append('-')\n","    df['kata_dasar'] = kata_dasar_list\n","    berhasil = 0\n","    pos_tepat = 0\n","    kata_tujuan_tepat = 0\n","    makna_tepat = 0\n","    kata_pokok_tepat = 0\n","\n","    for i in range(len(kata_asal[nomor])):\n","        if i > 0 and kata_asal[nomor][i] == kata_asal[nomor][i - 1]:\n","            ke += 1\n","        else:\n","            ke = 1\n","        fil = df[df['kata_asal'] == kata_asal[nomor][i]]\n","        if len(fil) < ke:\n","            continue\n","        fil = fil.reset_index(drop=True)\n","        berhasil += 1\n","        row = fil.loc[ke - 1]\n","        if row['POS'] == tag[nomor][i]:\n","            pos_tepat += 1\n","        if literal_eval(row['kata_tujuan']) == parse(kata_tujuan[nomor][i]):\n","            kata_tujuan_tepat += 1\n","        if literal_eval(row['makna']) == parse(makna[nomor][i]):\n","            makna_tepat += 1\n","        if row['kata_dasar'] == kata_dasar[nomor][i]:\n","            kata_pokok_tepat += 1\n","        else:\n","            print(nomor, kata_asal[nomor][i], row['kata_dasar'], 'vs', kata_dasar[nomor][i])\n","    print(round(pos_tepat * 100 / berhasil, 2), end = ' ')\n","    print(round(kata_tujuan_tepat * 100 / berhasil, 2), end = ' ')\n","    print(round(makna_tepat * 100 / berhasil, 2), end = ' ')\n","    print(round(kata_pokok_tepat * 100 / berhasil, 2), end = ' ')\n","    print(nomor, 'Kata asal tepat\\t', round(berhasil * 100 / len(kata_asal[nomor]), 2), '%', '(', berhasil, '/', len(kata_asal[nomor]),')')\n","    print(nomor, 'tag tepat\\t\\t', round(pos_tepat * 100 / berhasil, 2), '%', '(', pos_tepat, '/', berhasil,')')\n","    print(nomor, 'kata tujuan tepat\\t', round(kata_tujuan_tepat * 100 / berhasil, 2), '%', '(', kata_tujuan_tepat, '/', berhasil,')')\n","    print(nomor, 'makna tepat\\t\\t', round(makna_tepat * 100 / berhasil, 2), '%', '(', makna_tepat, '/', berhasil,')')\n","    print(nomor, 'kata pokok tepat\\t', round(kata_pokok_tepat * 100 / berhasil, 2), '%', '(', kata_pokok_tepat, '/', berhasil,')')\n","    print()"],"metadata":{"id":"ZH2jfqg94B1t"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def eval_parcor(df, nomor):\n","    A2 = 0\n","    B2 = 0\n","    berhasil = 0\n","    total = 0\n","    total2 = 0\n","    gold = []\n","    hasil_ekstraksi = []\n","    for i in range(len(kata_asal[nomor])):\n","        if kalimat_tujuan[nomor][i] != kalimat_tujuan[nomor][i] or kalimat_tujuan[nomor][i] == '-':\n","            continue\n","        total2 += 1\n","        ada = 0\n","        gabung = rapi(str(kalimat_asal[nomor][i])) + ' ' + rapi(str(kalimat_tujuan[nomor][i]))\n","        for j, row in df.iterrows():\n","            if rapi(str(row['kalimat_asal'])) + ' ' + rapi(str(row['kalimat_tujuan'])) == gabung:\n","                ada = 1\n","                break\n","        fil = df[(df['kalimat_asal'].astype(str).str.strip().str.lower() + ' ' + df['kalimat_tujuan'].astype(str).str.strip().str.lower()) == (str(kalimat_asal[nomor][i]).strip().lower() + ' ' + str(kalimat_tujuan[nomor][i]).strip().lower())]\n","        if len(fil) == 0:\n","            print(kalimat_asal[nomor][i])\n","            print(kalimat_tujuan[nomor][i])\n","            continue\n","        total += 1\n","        B2 += 1\n","\n","        fil2 = fil[(fil['kalimat_asal'].astype(str).str.strip().str.lower() == str(kalimat_asal[nomor][i]).strip().lower()) & (fil['kalimat_tujuan'].astype(str).str.strip().str.lower() == str(kalimat_tujuan[nomor][i]).strip().lower())]\n","        ada = 0\n","        for j, row in df.iterrows():\n","            if rapi(row['kalimat_asal']) == rapi(kalimat_asal[nomor][i]) and rapi(row['kalimat_tujuan']) == rapi(kalimat_tujuan[nomor][i]):\n","                ada = 1\n","                gold.append(str(kalimat_asal[nomor][i]) + ' | ' + str(kalimat_tujuan[nomor][i]))\n","                hasil_ekstraksi.append(str(row['kalimat_asal']) + ' | ' + str(row['kalimat_tujuan']))\n","                break\n","        if ada == 1:\n","            berhasil += 1\n","            A2 += 1\n","\n","    if total > 0:\n","        print(nomor, 'Ada     \\t', round(total * 100 / total2, 2), '%', '(', total, '/', total2, ')')\n","        print(nomor, 'Berhasil\\t', round(berhasil * 100 / total, 2), '%', '(', berhasil, '/', total,')')\n","    else:\n","        print(nomor, 'Ada     \\t', 'NA', '%', '(', total, '/', total2,')')\n","        print(nomor, 'Berhasil\\t', 'NA', '%', '(', berhasil, '/', total,')')\n","\n","    if total2 > 0 and total > 0:\n","        print(nomor, str(round(total * 100 / total2, 2)) + '%', str(round(berhasil * 100 / total, 2)) + '%')\n","\n","    ret = pd.DataFrame()\n","    ret['gold'] = gold\n","    ret['hasil_ekstraksi'] = hasil_ekstraksi\n","    return [ret, A2, B2]"],"metadata":{"id":"F2xUs4MA5yIH"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ozuW0q4zDt3r"},"outputs":[],"source":["import os\n","from pathlib import Path\n","directory = \"/content/drive/MyDrive/TA Bareng Bareng/Laporan Mingguan TA Harakan Julian Fausta/Minggu 15 (Final)/Ekstraksi/\"\n","for filename in os.listdir('/content/drive/MyDrive/TA Bareng Bareng/Hasil Anotasi'):\n","    if(filename[-3:] == 'csv'):\n","        nomor = int(filename[-6:-4])\n","        f = os.path.join('/content/drive/MyDrive/TA Bareng Bareng/Hasil Anotasi', filename)\n","        df = pd.read_csv(f)\n","        olah(df, nomor)\n"]},{"cell_type":"code","source":["import os\n","from pathlib import Path\n","directory = \"/content/drive/MyDrive/TA Bareng Bareng/Laporan Mingguan TA Harakan Julian Fausta/Minggu 15 (Final)/Ekstraksi/\"\n","path = directory + '8. Cleaning Informasi Sumber Daya NLP/'\n","cnt = 0\n","for filename in os.listdir(path):\n","    if(filename[-3:] == 'csv'):\n","        nomor = int(filename.split('_')[0])\n","        if nomor in list_kamus:\n","            f = os.path.join(path, filename)\n","            df = pd.read_csv(f)\n","            eval(df, nomor)\n"],"metadata":{"id":"iCEDYmXD2H46"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import os\n","from pathlib import Path\n","directory = \"/content/drive/MyDrive/TA Bareng Bareng/Laporan Mingguan TA Harakan Julian Fausta/Minggu 15 (Final)/Ekstraksi/\"\n","path = directory + '12. Parallel Corpus - Spelling Checker/'\n","cnt = 0\n","A = 0\n","B = 0\n","for filename in os.listdir(path):\n","    if filename == 'LookupIsFromIndonesia.csv':\n","        continue\n","    if(filename[-3:] == 'csv'):\n","        nomor = int(filename.split('_')[0])\n","        if nomor in list_kamus:\n","            f = os.path.join(path, filename)\n","            df = pd.read_csv(f)\n","            hasil = eval_parcor(df, nomor)\n","            A += hasil[1]\n","            B += hasil[2]\n","\n","print(A, '/', B, str(round(A * 100 / B, 2)) + '%')"],"metadata":{"id":"3q6C6n-9Jfrv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import os\n","from pathlib import Path\n","directory = \"/content/drive/MyDrive/TA Bareng Bareng/Laporan Mingguan TA Harakan Julian Fausta/Minggu 15 (Final)/Ekstraksi/\"\n","path = directory + '11. Parallel Corpus/'\n","cnt = 0\n","A = 0\n","B = 0\n","for filename in os.listdir(path):\n","    if filename == 'LookupIsFromIndonesia.csv':\n","        continue\n","    if(filename[-3:] == 'csv'):\n","        nomor = int(filename.split('_')[0])\n","        if nomor in list_kamus:\n","            f = os.path.join(path, filename)\n","            df = pd.read_csv(f)\n","            hasil = eval_parcor(df, nomor)\n","            A += hasil[1]\n","            B += hasil[2]\n","\n","print(A, '/', B, str(round(A * 100 / B, 2)) + '%')"],"metadata":{"id":"sxCZ3TptiTEn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for i in list_kamus:\n","    print(len(kata_asal[i]))"],"metadata":{"id":"_CYl1W8PzmHP"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[{"file_id":"1S69tkfztapHYWU6gf-kpQAyBxX5OY9ho","timestamp":1694335836460}]},"interpreter":{"hash":"31f2aee4e71d21fbe5cf8b01ff0e069b9275f58929596ceb00d14d90e3e16cd6"},"kernelspec":{"display_name":"Python 3.8.2 64-bit","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.2"}},"nbformat":4,"nbformat_minor":0}